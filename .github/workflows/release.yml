name: Bump Version and Create Release

on:
  push:
    branches:
      - main

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools

    - name: Extract current version
      id: extract_version
      run: |
        current_version=$(python setup.py --version)
        echo "Current version: $current_version"
        new_version=$(python -c "import re; print(re.sub(r'(\d+)\.(\d+)\.(\d+)', lambda m: f'{m.group(1)}.{m.group(2)}.{int(m.group(3))+1}', '$current_version'))")
        echo "New version: $new_version"
        echo "new_version=$new_version" >> $GITHUB_ENV

    - name: Bump version in setup.py
      run: |
        sed -i "s/version=\"$current_version\"/version=\"$new_version\"/" setup.py
        git diff
        git diff --quiet || git add setup.py

    - name: Commit and push changes
      if: success()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git commit -m "Bump version to $new_version" || echo "No changes to commit"
        git tag "v$new_version"
        git push origin main --tags

    - name: Create GitHub release
      if: success()
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: "v${{ env.new_version }}"
        release_name: "v${{ env.new_version }}"
        draft: false
        prerelease: false