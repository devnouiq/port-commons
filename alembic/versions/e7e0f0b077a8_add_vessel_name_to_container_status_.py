"""Add vessel_name to container_status_table

Revision ID: e7e0f0b077a8
Revises: 
Create Date: 2024-08-30 17:09:55.300640

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'e7e0f0b077a8'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('shipments')
    op.drop_table('container_status_table')
    op.drop_table('scraper_metadata')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('scraper_metadata',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('scraper_friendly_name', sa.VARCHAR(), autoincrement=False, nullable=False, comment='A human-friendly name for the scraper'),
    sa.Column('scraper_id', postgresql.ENUM('APM', 'MAHER', name='scraper'), autoincrement=False, nullable=True, comment='Unique identifier for the scraper'),
    sa.Column('terminal_id', sa.VARCHAR(), autoincrement=False, nullable=False, comment='Terminal ID associated with the scraper'),
    sa.Column('scrape_frequency_hours', sa.INTEGER(), autoincrement=False, nullable=False, comment='Frequency of scraping in hours'),
    sa.Column('last_scraped_time', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True, comment='The last time the scraper was run, in UTC'),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False, comment='Indicates whether the scraper is currently active'),
    sa.Column('scraper_version', sa.VARCHAR(), autoincrement=False, nullable=True, comment='Version of the scraper'),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False, comment='Timestamp when the scraper was created, in UTC'),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True, comment='Timestamp when the scraper was last updated, in UTC'),
    sa.PrimaryKeyConstraint('id', name='scraper_metadata_pkey')
    )
    op.create_table('container_status_table',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('shipment_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('port', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('terminal', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('container_number', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('available', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('usda_status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('last_free_date', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('location', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('custom_release_status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('carrier_release_status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('demurrage_amount', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('yard_terminal_release_status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('last_updated_availability', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='container_status_table_pkey'),
    sa.UniqueConstraint('container_number', name='container_status_table_container_number_key')
    )
    op.create_table('shipments',
    sa.Column('shipment_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('container_number', sa.VARCHAR(length=30), autoincrement=False, nullable=True),
    sa.Column('master_bol_number', sa.VARCHAR(length=30), autoincrement=False, nullable=True),
    sa.Column('house_bol_number', sa.VARCHAR(length=30), autoincrement=False, nullable=True),
    sa.Column('run_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('voyage_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('terminal_id', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('error', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('scrape_status', postgresql.ENUM('ASSIGNED', 'ACTIVE', 'IN_PROGRESS', 'INELIGIBLE', 'STOPPED', 'FAILED', name='scrapestatus'), autoincrement=False, nullable=False),
    sa.Column('submitted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('frequency', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('last_scraped_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('next_scrape_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('start_scrape_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('shipment_id', name='shipments_pkey')
    )
    # ### end Alembic commands ###
